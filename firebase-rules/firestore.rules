rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isCustomer() {
      return isAuthenticated() && request.auth.token.email != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Customer documents
    match /customers/{customerId} {
      allow read: if isOwner(customerId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == customerId;
      allow update: if isOwner(customerId) && 
        // Prevent customers from modifying sensitive fields
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['credits', 'role', 'createdAt']);
      allow delete: if false; // Never allow deletion
    }
    
    // Series documents (public read for browsing)
    match /series/{seriesId} {
      allow read: if true; // Public access for browsing
      allow write: if isAdmin();
    }
    
    // Episode unlocks
    match /episodeUnlocks/{unlockId} {
      allow read: if isOwner(resource.data.customerId) || isAdmin();
      allow create: if isCustomer() && 
        request.auth.uid == request.resource.data.customerId &&
        request.resource.data.keys().hasAll(['customerId', 'seriesId', 'episodeNumber', 'unlockedAt']);
      allow update: if false; // Unlocks are immutable
      allow delete: if false;
    }
    
    // Credit transactions
    match /credit-transactions/{transactionId} {
      allow read: if isOwner(resource.data.customerId) || isAdmin();
      allow create: if false; // Only server-side
      allow update: if false; // Transactions are immutable
      allow delete: if false;
    }
    
    // User activities
    match /userActivities/{activityId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isCustomer() && request.auth.uid == request.resource.data.userId;
      allow update: if false; // Activities are immutable
      allow delete: if false;
    }
    
    // User badges
    match /userBadges/{userId}/badges/{badgeId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if false; // Only server-side
    }
    
    // Purchases collection
    match /purchases/{purchaseId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow write: if false; // Only server-side
    }
    
    // Admin collection
    match /admins/{adminId} {
      allow read: if isAdmin();
      allow write: if false; // Only through secure admin processes
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
